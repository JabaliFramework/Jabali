.badge,
.chip {
  background-color: $chip-bg;
  border-radius: ($chip-height / 2);
  color: $chip-color;
  display: inline-block;
  font-size: $chip-font-size;
  font-weight: $chip-font-weight;
  line-height: 1;
  padding: $chip-padding-y $chip-padding-x;
  position: relative;
  vertical-align: middle;
  white-space: nowrap;

  &:empty {
    display: none;
  }
}

a.badge,
a.chip {
  color: $chip-color;
  z-index: 1;
  @include transition-standard(box-shadow);

  &::before {
    background-color: $chip-active-overlay;
    border-radius: ($chip-height / 2);
    content: "";
    display: block;
    opacity: 0;
    position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
    z-index: -1;
    @include transition-standard(opacity);
  }

  // active, focus, hover
    @include active-focus-hover {
      color: $chip-color;

      @if ($link-decoration-active != "none") {
        text-decoration: none;
      }

      &::before {
        opacity: 1; 
      }
    }

    &:active {
      box-shadow: map-get($chip-elevation-shadow-active, shadow);
      z-index: map-get($chip-elevation-shadow-active, elevation);
    }

    &:focus {
      outline: 0;
    }
}

// colour
  .badge-inverse,
  .chip-inverse {
    background-color: $chip-bg-inverse;
    color: $chip-color-inverse;
  }

  a.badge-inverse,
  a.chip-inverse {
    @include plain-active-focus-hover {
      color: $chip-color-inverse;
    }
  }

  @each $color in $palettes {
    $i: index($palettes, $color);

    .badge-#{$color},
    .chip-#{$color} {
      background-color: nth($palettes-color, $i);
      color: nth($palettes-text-color, $i);
    }

    a.badge-#{$color},
    a.chip-#{$color} {
      @include plain-active-focus-hover {
        color: nth($palettes-text-color, $i);
      }
    }
  }
